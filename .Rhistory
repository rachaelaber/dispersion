nsim <- 1000
sim_matrix <- matrix(NA, nsim, 60)
for (i in 1:nsim) {
sim_matrix[i, ] <- rnbinom(n = 60, mu = mu, size = theta)
}
# Construct quantiles
ll <- apply(sim_matrix, 2, quantile, probs = 0.1)
ul <- apply(sim_matrix, 2, quantile, probs = 0.9)
# Plot
filename <- paste0("figures/", target, ".pdf")
pdf(file = filename, width = 6, height = 6)
state <- populations_subset$State[target]
county <- populations_subset$County.Name[target]
pop <- populations_subset$population[target]
title <- paste0(county, " ", state, ", ", ceiling(pop/1000), " thousand",
"\n p-value = ", round(p_value, 8))
plot(cases / pop * 10^5, pch = 21, cex = 1, main = title, cex.main = 0.9)
mypoly(1:60, ll / pop * 10^5, ul / pop * 10^5)
lines(mu / pop * 10^5, col = 2, lwd = 2)
pch <- ifelse(cases > ul | cases < ll, 19, 21)
points(cases / pop * 10^5, cex = 1, pch = pch)
segments(30, -10, 30, 10^6)
dev.off()
}
target = 88
cases <- new_cases_subset[target, ]
pop <- populations_subset$population[target]
out <- tryCatch(lrt(
y1 = cases[1:30], y2 = cases[31:60],
s1 = pop, s2 = pop, i1 = 1:30, i2 = 31:60, df1 = 3,
df2 = 3
), error = function(e) return(NA))
out
# Get the null process
spl <- tryCatch(my_spl_fit(Y = cases, population = pop, inds = 1:60, df = 6),
error = function(e) return(NA))
spl
target = 536
cases <- new_cases_subset[target, ]
rm(list = ls())
graphics.off()
# Load function to fit model
source("code/fit.nb.regression.R")
source("code/my_spl_fit.R")
source("code/lrt.R")
# Load data
load("data/processed_dat.Rdata")
# Function to make polygon
mypoly <- function(x, y1, y2) {
xx <- c(x, rev(x))
yy <- c(y1, rev(y2))
polygon(xx, yy, col = "pink", border = NA)
}
target = 536
cases <- new_cases_subset[target, ]
pop <- populations_subset$population[target]
out <- tryCatch(lrt(
y1 = cases[1:30], y2 = cases[31:60],
s1 = pop, s2 = pop, i1 = 1:30, i2 = 31:60, df1 = 3,
df2 = 3
), error = function(e) return(NA))
out
# Get the null process
spl <- tryCatch(my_spl_fit(Y = cases, population = pop, inds = 1:60, df = 6),
error = function(e) return(NA))
spl
plot(cases[88,])
plot(cases)
target = 88
cases <- new_cases_subset[target, ]
plot(cases)
my_spl_fit(Y = cases, population = pop, inds = 1:60, df = 6)
target = 88
cases <- new_cases_subset[target, ]
pop <- populations_subset$population[target]
my_spl_fit(Y = cases, population = pop, inds = 1:60, df = 6)
target = 536
cases <- new_cases_subset[target, ]
pop <- populations_subset$population[target]
my_spl_fit(Y = cases, population = pop, inds = 1:60, df = 6)
which(log(theta2) > 10 & abs(log(theta1)) < 10)
source("code/lrt.R")
filename <- "data/processed_dat.RData"
load(filename)
rm(filename)
pvals <- rep(NA, nrow(populations_subset))
phi11 <- rep(NA, nrow(populations_subset))
phi12 <- rep(NA, nrow(populations_subset))
fips <- rep(NA, nrow(populations_subset))
for (i in 1:nrow(populations_subset)){
pvals[i] <- tryCatch(lrt(y1 = new_cases_subset[i,][1:30], y2 = new_cases_subset[i,][31:60],
s1 = populations_subset$population[i], s2 = populations_subset$population[i], i1 = 1:30,
i2 = 31:60, df1 = 3, df2 = 3)$p, error = function(e) return(NA))
phi11[i] <- tryCatch(lrt(y1 = new_cases_subset[i,][1:30], y2 = new_cases_subset[i,][31:60],
s1 = populations_subset$population[i], s2 = populations_subset$population[i], i1 = 1:30,
i2 = 31:60, df1 = 3, df2 = 3)$phi11, error = function(e) return(NA))
phi12[i] <- tryCatch(lrt(y1 = new_cases_subset[i,][1:30], y2 = new_cases_subset[i,][31:60],
s1 = populations_subset$population[i], s2 = populations_subset$population[i], i1 = 1:30,
i2 = 31:60, df1 = 3, df2 = 3)$phi12, error = function(e) return(NA))
fips[i] <- populations_subset$countyFIPS[i]
cat("County", i, "of", nrow(populations_subset), "p-value:", pvals[i], "\n")
}
filename <- "data/lrt_pvals_phis_allcounties.Rdata"
save(pvals, phi11, phi12, fips, file = filename)
filename <- "figures/lrt_counties.pdf"
pdf(filename, width = 6, height = 6)
p_max <- 0.05
sig <- pvals < p_max
par(cex = 1.5)
par(pin = c(4, 4))
theta1 <- 1/phi11
theta2 <- 1/phi12
plot(log(theta1), log(theta2),
cex = ifelse(sig, 1, 0.5),
col = ifelse(sig, 2, grey(0.5)),
xlab = expression(paste("log ", theta[1])),
ylab = expression(paste("log ", theta[2])),
#ylim = c(-1, 8),
#xlim = c(-1, 8)
)
dev.off()
which(log(theta1) < -30 & abs(log(theta2)) < 10)
# Index 88 - envelope not produced because spl is NA; lrt fine
"Error in irls.nb.1(y, s, x, 1, beta0) : 0s in V(mu)"
# Index 536 - envelope not produced because spl is NA; lrt fine
"Error in irls.nb.1(y, s, x, 1, beta0) : 0s in V(mu)"
which(log(theta2) > 10 & abs(log(theta1)) < 10)
pvals[204]
which(log(theta2) > 10 & abs(log(theta1)) < 10)
source("~/Desktop/2023_paper/code/heuristic_envelope_all.R", echo=TRUE)
rm(list = ls())
graphics.off()
library(viridis)
load("data/lrt_lg_pops.Rdata")
load("data/processed_long_dat.Rdata")
dates <- dates[30:(length(dates) - 30 + 1)]
z <- t(lrt_stats)
x <- seq_len(nrow(z))
y <- seq_len(ncol(z))
filename <- "figures/lrt_surface_figure.pdf"
pdf(filename, width = 8, height = 8)
par(pin = c(7, 5))
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
col = rev(mako(32)))
par(las = 2)
axis(1, x, dates, tick = FALSE)
dev.off()
# Plot likelihood ratios as a surface over counties and time
rm(list = ls())
graphics.off()
library(viridis)
# Load data
load("data/lrt_lg_pops.Rdata")
load("data/processed_long_dat.Rdata")
# Data setup
dates <- dates[30:(length(dates) - 30 + 1)]
z <- t(lrt_stats)
x <- seq_len(nrow(z))
y <- seq_len(ncol(z))
filename <- "figures/lrt_surface_figure.pdf"
pdf(filename, width = 8, height = 8)
# Plot
par(pin = c(7, 5))
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
col = rev(mako(32)))
par(las = 2)
axis(1, x, dates, tick = FALSE)
dev.off()
source("~/Desktop/2023_paper/code/create_surfaces.R", echo=TRUE)
setwd("~/Desktop/2023_paper")
rm(list = ls())
graphics.off()
library(viridis)
load("data/lrt_lg_pops.Rdata")
dim(lrt_stats)
load("data/processed_long_dat.Rdata")
dates <- dates[30:(length(dates) - 30 + 1)]
length(dates)
z <- t(lrt_stats)
x <- seq_len(nrow(z))
y <- seq_len(ncol(z))
length(x)
length(y)
dim(x)
dim(z)
image(x, y, t(z))
image(x, y, t(z))
image(x, y, z)
dim(lrt_stats)
lrt_stats[100,]
lrt_stats[10,]
lrt_stats[120,]
lrt_stats[160,]
dim(lrt_stats)
source("code/lrt.R")
source("code/my_spl_fit.R")
load("data/processed_long_dat.Rdata")
unique_states <- unique(populations$State)
nstate <- length(unique_states)
keep <- c()
for (i in 1:nstate){
j <- which(populations$State == unique_states[i])
k <- which(populations$population[j] > quantile(populations$population[j], 0.96))
keep <- c(keep, j[k])
}
new_cases_lg <- new_cases[keep,]
populations_lg <- populations[keep,]
filename <- "data/new_cases_lg.Rdata"
save(new_cases_lg, populations_lg, file = filename)
lrt_stats <- matrix(NA, nrow = length(keep), ncol = 1124)
thetas <- matrix(NA, nrow = length(keep), ncol = 1124)
source("~/Desktop/2023_paper/code/thetas_lrtstats_lgpops.R", echo=TRUE)
source("~/Desktop/2023_paper/code/thetas_lrtstats_lgpops.R", echo=TRUE)
source("code/lrt.R")
filename <- "data/processed_dat.RData"
load(filename)
rm(filename)
pvals <- rep(NA, nrow(populations_subset))
phi11 <- rep(NA, nrow(populations_subset))
phi12 <- rep(NA, nrow(populations_subset))
fips <- rep(NA, nrow(populations_subset))
for (i in 1:nrow(populations_subset)){
pvals[i] <- tryCatch(lrt(y1 = new_cases_subset[i,][1:30], y2 = new_cases_subset[i,][31:60],
s1 = populations_subset$population[i], s2 = populations_subset$population[i], i1 = 1:30,
i2 = 31:60, df1 = 3, df2 = 3)$p, error = function(e) return(NA))
phi11[i] <- tryCatch(lrt(y1 = new_cases_subset[i,][1:30], y2 = new_cases_subset[i,][31:60],
s1 = populations_subset$population[i], s2 = populations_subset$population[i], i1 = 1:30,
i2 = 31:60, df1 = 3, df2 = 3)$phi11, error = function(e) return(NA))
phi12[i] <- tryCatch(lrt(y1 = new_cases_subset[i,][1:30], y2 = new_cases_subset[i,][31:60],
s1 = populations_subset$population[i], s2 = populations_subset$population[i], i1 = 1:30,
i2 = 31:60, df1 = 3, df2 = 3)$phi12, error = function(e) return(NA))
fips[i] <- populations_subset$countyFIPS[i]
cat("County", i, "of", nrow(populations_subset), "p-value:", pvals[i], "\n")
}
rm(list = ls())
graphics.off()
# Load function to fit model
source("code/fit.nb.regression.R")
source("code/my_spl_fit.R")
source("code/lrt.R")
# Load data
load("data/processed_dat.Rdata")
# Function to make polygon
mypoly <- function(x, y1, y2) {
xx <- c(x, rev(x))
yy <- c(y1, rev(y2))
polygon(xx, yy, col = "pink", border = NA)
}
# Plot
targets <- 600:2500
par(pin = c(6, 6), cex = 2.5)
View(populations_subset)
source("~/Desktop/2023_paper/code/lrt_counties.R", echo=TRUE)
plot(log(theta1), log(theta2),
cex = populations_subset$population/100000000,
col = ifelse(sig, 2, grey(0.5)),
xlab = expression(paste("log ", theta[1])),
ylab = expression(paste("log ", theta[2])),
#ylim = c(-1, 8),
#xlim = c(-1, 8)
)
plot(log(theta1), log(theta2),
cex = populations_subset$population/100000000,
col = ifelse(sig, 2, grey(0.5)),
xlab = expression(paste("log ", theta[1])),
ylab = expression(paste("log ", theta[2])),
#ylim = c(-1, 8),
#xlim = c(-1, 8)
)
plot(log(theta1), log(theta2),
cex = populations_subset$population/100000000,
col = ifelse(sig, 2, grey(0.5)),
xlab = expression(paste("log ", theta[1])),
ylab = expression(paste("log ", theta[2])),
#ylim = c(-1, 8),
#xlim = c(-1, 8)
)
graphics.off()
plot(log(theta1), log(theta2),
cex = populations_subset$population/100000000,
col = ifelse(sig, 2, grey(0.5)),
xlab = expression(paste("log ", theta[1])),
ylab = expression(paste("log ", theta[2])),
#ylim = c(-1, 8),
#xlim = c(-1, 8)
)
plot(log(theta1), log(theta2),
cex = populations_subset$population/10000000,
col = ifelse(sig, 2, grey(0.5)),
xlab = expression(paste("log ", theta[1])),
ylab = expression(paste("log ", theta[2])),
#ylim = c(-1, 8),
#xlim = c(-1, 8)
)
plot(log(theta1), log(theta2),
cex = populations_subset$population/1000000,
col = ifelse(sig, 2, grey(0.5)),
xlab = expression(paste("log ", theta[1])),
ylab = expression(paste("log ", theta[2])),
#ylim = c(-1, 8),
#xlim = c(-1, 8)
)
source("code/lrt.R")
source("code/my_spl_fit.R")
load("data/processed_long_dat.Rdata")
unique_states <- unique(populations$State)
nstate <- length(unique_states)
keep <- c()
for (i in 1:nstate){
j <- which(populations$State == unique_states[i])
k <- which(populations$population[j] > quantile(populations$population[j], 0.96))
keep <- c(keep, j[k])
}
new_cases_lg <- new_cases[keep,]
populations_lg <- populations[keep,]
filename <- "data/new_cases_lg.Rdata"
save(new_cases_lg, populations_lg, file = filename)
lrt_stats <- matrix(NA, nrow = length(keep), ncol = 1124)
thetas <- matrix(NA, nrow = length(keep), ncol = 1124)
for (j in 1:length(keep)){
print(j)
series = new_cases_lg[j,]
lrt_stat = c()
theta = c()
for (i in 30:(length(series) - 30 + 1)){
Y = series[(i - 29):(i + 30)]
test = tryCatch(lrt(y1 = Y[1:(length(Y)/2)], y2 = Y[((length(Y)/2) + 1):length(Y)],
s1 = populations_lg$population[j],
s2 = populations_lg$population[j],
i1 = 1:30,
i2 = 31:60,
df1 = 3,
df2 = 3)$lambda, error = function(e) return(NA))
lrt_stat = c(lrt_stat, test)
test.2 = tryCatch(lrt(y1 = Y[1:(length(Y)/2)], y2 = Y[((length(Y)/2) + 1):length(Y)],
s1 = populations_lg$population[j],
s2 = populations_lg$population[j],
i1 = 1:30,
i2 = 31:60,
df1 = 3,
df2 = 3)$phi11, error = function(e) return(NA))
theta = c(theta, 1/test.2)
}
lrt_stats[j,] <- lrt_stat
thetas[j,] <- theta
print(lrt_stat)
}
filename <- "data/lrt_lg_pops.Rdata"
save(lrt_stats, file = filename)
filename <- "data/theta_lg_pops.Rdata"
save(thetas, file = filename)
rm(list = ls())
graphics.off()
library(viridis)
load("data/lrt_lg_pops.Rdata")
load("data/processed_long_dat.Rdata")
dates <- dates[30:(length(dates) - 30 + 1)]
z <- t(lrt_stats)
x <- seq_len(nrow(z))
y <- seq_len(ncol(z))
setwd("~/Desktop/2023_paper")
source("~/Desktop/2023_paper/code/create_surfaces.R", echo=TRUE)
source("~/Desktop/2023_paper/code/create_surfaces.R", echo=TRUE)
View(lthetadiffs)
which(!is.na(lthetadiffs))
source("~/Desktop/2023_paper/code/create_surfaces.R", echo=TRUE)
source("~/Desktop/2023_paper/code/create_surfaces.R", echo=TRUE)
source("~/Desktop/2023_paper/code/create_surfaces.R", echo=TRUE)
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
col = rev(mako(3)))
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
)
max(thetas)
max(thetas, na.rm = T)
min(thetas, na.rm = T)
thetas[thetas > 40] <- NA
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
col = rev(mako(32)))
thetas[thetas > 12] <- NA
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
col = rev(mako(32)))
thetas[thetas > 10] <- NA
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
col = rev(mako(32)))
thetas[thetas > 5] <- NA
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
col = rev(mako(32)))
max(thetas, na.rm = T)
z <- t(thetas)
x <- seq_len(nrow(z))
y <- seq_len(ncol(z))
filename <- "figures/theta_surface.pdf"
pdf(filename, width = 8, height = 8)
# Plot
par(pin = c(7, 5))
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
col = rev(mako(32)))
par(las = 2)
axis(1, x, dates, tick = FALSE)
dev.off()
diff(thetas)
rm(list = ls())
graphics.off()
rm(list = ls())
graphics.off()
library(viridis)
load("data/lrt_lg_pops.Rdata")
load("data/processed_long_dat.Rdata")
dates <- dates[30:(length(dates) - 30 + 1)]
z <- t(lrt_stats)
x <- seq_len(nrow(z))
y <- seq_len(ncol(z))
filename <- "figures/lrt_surface_figure.pdf"
pdf(filename, width = 8, height = 8)
par(pin = c(7, 5))
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
col = rev(mako(32)))
par(las = 2)
axis(1, x, dates, tick = FALSE)
dev.off()
load("data/theta_lg_pops.Rdata")
diff(thetas)
t <- diff(thetas)
View(t)
t <- log(thetas)
View(thetas)
lthetadiffs <- diff(t)
lthetadiffs
View(lthetadiffs)
z <- t(lthetadiffs)
x <- seq_len(nrow(z))
y <- seq_len(ncol(z))
filename <- "figures/theta_surface.pdf"
pdf(filename, width = 8, height = 8)
# Plot
par(pin = c(7, 5))
image(x, y, z,
xaxt = "n",
yaxt = "n",
xlab = "",
ylab = "Locations",
col = rev(mako(32)))
par(las = 2)
axis(1, x, dates, tick = FALSE)
dev.off()
source("~/Desktop/2023_paper/code/create_surfaces.R", echo=TRUE)
filename <- "figures/lrt_counties.pdf"
load("data/lrt_pvals_phis_allcounties.Rdata")
source("~/Desktop/2023_paper/code/lrt_counties_viz.R", echo=TRUE)
source("~/Desktop/2023_paper/code/lrt_counties_viz.R", echo=TRUE)
load("data/processed_long_dat.Rdata")
load("data/new_cases_lg.Rdata")
load("data/lrt_lg_pops.Rdata")
load("data/theta_lg_pops.Rdata")
load("data/new_cases_lg.Rdata")
load("data/lrt_lg_pops.Rdata")
load("data/theta_lg_pops.Rdata")
load("data/processed_long_dat.Rdata")
dates <- dates[30:(length(new_cases[1,]) - 30 + 1)]
filename <- "figures/compare.pdf"
pdf(filename, height = 6, width = 6)
for (i in 1:length(keep)){
series = new_cases_lg[i,]
par(mfrow = c(2, 1))
plot(series[30:(length(series) - 30 + 1)], type = "l", main = "Incidence")
abline(v = 281, col = "red")
plot(lrt_stats[i, ], type = "l", col = 2, main = "LRT")
plot(log(thetas[i, ]), type = "l", col = 4, main = "Log Theta")
abline(v = 281, col = "red")
}
source("~/Desktop/2023_paper/code/compare.R", echo=TRUE)
length(populations_lg$population)
